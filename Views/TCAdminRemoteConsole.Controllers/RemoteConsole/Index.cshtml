@using System.Web.Mvc.Ajax
@using System.Web.Mvc.Html
@using Kendo.Mvc.UI
@using TCAdmin.GameHosting.SDK.Objects
@using TCAdmin.SDK.Web.MVC.Extensions
@using TCAdminRemoteConsole.Models
@{
    Layout = this.GetTemplateFile("Shared/Main.cshtml", true);
}

@section sidebar{
    @Html.Partial("_DefaultSidebar")
}

@using (Ajax.BeginForm("RequestCommand", "RemoteConsole", new AjaxOptions {OnSuccess = "showConsole", OnFailure = "onError"}))
{
    @Html.AntiForgeryToken()

    <div class="primary-toolbar">
        @(Html.Kendo().ToolBar()
            .Name("ToolBar")
            .Items(items =>
            {
                items.Add().Template("<button class='k-button k-primary' type='submit'><span class='k-icon k-i-js'></span>Execute</button>");
                items.Add().Type(CommandType.Button).Icon("cancel").Text(Resources.Global.Cancel).Click("TCAdmin.Ajax.CancelClicked");
                items.Add().Type(CommandType.Separator);
                items.Add().Template(Html.Kendo().DropDownList()
                    .Name("terminalScripts")
                    .OptionLabel("Load script...")
                    .DataTextField("Name")
                    .DataValueField("ScriptId")
                    .DataSource(x => x.Read("GetScripts", "RemoteConsole"))
                    .Events(e => e.Change("loadScript"))
                    .ToHtmlString());
                items.Add().Type(CommandType.Button).Text("Save Script").Icon("save").HtmlAttributes(new {onclick = "saveScript()"});
                items.Add().Type(CommandType.Button).Text("Delete Script").Icon("delete").HtmlAttributes(new {onclick = "deleteScript()"});
            }))
    </div>
    <div class="primary-content">
        <fieldset class="fieldset-form auto-focus">
            @Html.ValidationSummary(true)
            <dl>
                <dt>@Html.Label("ServerId", "Server: ")</dt>
                <dd>
                    @(Html.Kendo().DropDownList()
                        .Name("ServerId")
                        .BindTo(TCAdmin.GameHosting.SDK.Objects.Server.GetEnabledServers().Cast<Server>().Select(x => new DropDownListItem()
                        {
                            Value = x.ServerId.ToString(),
                            Text = x.Name + " | " + x.OperatingSystem + " | " + x.PrimaryIp
                        }))
                        .SelectedIndex(0))
                </dd>

                <dt>@Html.Label("TerminalType", "Terminal: ")</dt>
                <dd>
                    @(Html.Kendo().DropDownList()
                        .Name("TerminalType")
                        .BindTo(Enum.GetNames(typeof(TerminalType)).Select(x => new DropDownListItem
                        {
                            Text = x,
                            Value = x
                        }))
                        .Events(events => events.Change("terminalChange"))
                        .SelectedIndex(0))
                </dd>


                <dt>@Html.Label("Script", "Script: ")</dt>
                <dd>
                    @Html.TextArea("Script", "", new {@class = "k-textbox", style = "width: 800px; height: 200px;"})
                </dd>
                @* <div id="Script"></div> *@
            </dl>
        </fieldset>
    </div>
}

<script src="../../3rdParty/codemirror-5.53.2/lib/codemirror.js"></script>
<link rel="stylesheet" href="../../3rdParty/codemirror-5.53.2/lib/codemirror.css">
<script src="../../3rdParty/codemirror-5.53.2/mode/powershell/powershell.js"></script>
<script src="../../3rdParty/codemirror-5.53.2/mode/vb/vb.js"></script>
<script src="../../3rdParty/codemirror-5.53.2/mode/shell/shell.js"></script>

<script>
    let scriptBox;

    function showConsole(e){
        TCAdmin.Ajax.ShowUrlDialog('Remote Console', e.url, function(){ }, 800, 500);
        document.body.style.cursor = "auto";
    }
    
    function onError(e){
        if(e.responseJSON && e.responseJSON.Message){
            TCAdmin.Ajax.ShowBasicDialog("Error", e.responseJSON.Message);
            document.body.style.cursor = "auto";
        }
    }
    
    function saveScript(){
        let nameOfScript;
        kendo.prompt('Name the script', '').done(function(data) {
            nameOfScript = data;
            $.ajax({
                type: "POST",
                url: "/RemoteConsole/SaveScript",
                data: JSON.stringify({ name: nameOfScript, TerminalType: $("#TerminalType").data("kendoDropDownList").value(), Script: scriptBox.getValue() }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function (e) {
                    console.log(e);
                    kendo.ui.progress($(".k-filemanager-view"), false);
                    if (e.responseJSON && e.responseJSON.Message)
                        TCAdmin.Ajax.ShowBasicDialog("Save Failure", e.responseJSON.Message);
                },
                success: function (e) {
                    console.log(e);
                    refreshScripts();
                    TCAdmin.Ajax.ShowBasicDialog("Save Successful", e.Message);
                }
            });
        });
    }
    
    function loadScript(e) {
        const value = $("#terminalScripts").data("kendoDropDownList").value();
        if(value == null){return;}
        $.ajax({
            type: "GET",
            url: "/RemoteConsole/LoadScript",
            data: {id: value },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            error: function (e) {
                console.log(e);
                kendo.ui.progress($(".k-filemanager-view"), false);
                if (e.responseJSON && e.responseJSON.Message)
                    TCAdmin.Ajax.ShowBasicDialog("Save Failure", e.responseJSON.Message);
            },
            success: function (e) {
                console.log(e);
                const terminalTypeList = $("#TerminalType").data("kendoDropDownList");
                terminalTypeList.select(e.TerminalType)
                terminalTypeList.trigger("change");
                scriptBox.setValue(e.Contents)
                refreshScripts();
                TCAdmin.Ajax.ShowBasicDialog("Load Successful", 'Successfully loaded the script.');
            }
        });
    }
    
    function deleteScript(){
        const value = $("#terminalScripts").data("kendoDropDownList").value();
        if(value == null){return;}
        kendo.confirm('Are you sure you want to delete this script?').done(function(){
            $.ajax({
                type: "POST",
                url: "/RemoteConsole/DeleteScript",
                data: JSON.stringify({id: value }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function (e) {
                    console.log(e);
                    kendo.ui.progress($(".k-filemanager-view"), false);
                    if (e.responseJSON && e.responseJSON.Message)
                        TCAdmin.Ajax.ShowBasicDialog("Delete failure", e.responseJSON.Message);
                },
                success: function (e) {
                    console.log(e);
                    const terminalTypeList = $("#TerminalType").data("kendoDropDownList");
                    terminalTypeList.select(0)
                    terminalTypeList.trigger("change");
                    scriptBox.setValue("")
                    refreshScripts();
                    TCAdmin.Ajax.ShowBasicDialog("Delete Successful", 'Successfully deleted the script.');
                }
            });
        })
    }
    
    function refreshScripts(){
        $("#terminalScripts").data("kendoDropDownList").dataSource.read()
    }
    
    function terminalChange(e) {
        const value = this.value();
        if(value === "Powershell"){
            scriptBox.setOption("mode", "powershell")
        } else if(value === "CommandPrompt"){
            scriptBox.setOption("mode", "vb")
        }
    }
    
    $(document).ready(function() {
        scriptBox = CodeMirror.fromTextArea($("#Script")[0], {
          value: "",
          mode:  "vb",
          lineNumbers: true
        });
    });

</script>